
// func randListGopterGen() gopter.Gen {
// 	var randomList List = List{}
// 	var listLength int = rand.Intn(100);
// 	for i:=0; i<listLength;i++{
// 		randomList.Insert(rand.Int())
// 	}
// 	return gopter.NewGenResult(randList, gopter.NoShrinker)
// }

// func TestListGoper(t *testing.T){
// 	parameters := gopter.DefaultTestParameters()
// 	parameters.Rng.Seed(1234)
// 	properties := gopter.NewProperties(parameters)
// 	properties.Property("gopter: same size", prop.ForAll(
// 		func(L List) bool {
// 			var size = L.Size()
// 			L.Reverse()
// 			var sizeR = L.Size()
// 			return size == sizeR
// 		},
// 		randListGopterGen()),
// 	)
// 	properties.TestingRun(t)
// }